@page "/admin/orders"
@layout AdminLayout
@using DoAnBanSach.Client.Services
@using DoAnBanSach.Shared
@using System.Security.Claims
@using Microsoft.AspNetCore.Authorization
@inject IJSRuntime JsRuntime
@inject OrderService OrderService
@inject PriceFormatter PriceFormatter
<!--attribute [Authorize(Roles = "Khách hàng")]-->

<Modal IsOpen="@IsOpen" OnCloseModal=@(() => IsOpen = false)>
    <div class="row order-detail-wrapper" style="width: 70vw;">
        <div class="row order-detail-content" style="margin-bottom: 16px;">
            <div class="col-6" style="font-size: 1.1rem">
                <span style="font-size: 1.1rem; font-weight: bold;">Mã đơn hàng: </span>@Order.OrderId
            </div>
            <div class="col-4 offset-2" style="font-size: 1.1rem;">
                <span style="font-size: 1.1rem; font-weight: bold;">Ngày đặt: </span>@Order.Date.ToShortDateString()
            </div>
            <div class="col-6" style="font-size: 1.1rem">
                <span style="font-size: 1.1rem; font-weight: bold;">Mã khách hàng: </span>@Order.CustomerId
            </div>
            <div class="col-4 offset-2" style="font-size: 1.1rem;">
                <span style="font-size: 1.1rem; font-weight: bold;">Mã nhân viên: </span>@(Order.EmployeeId ?? "Chưa có")
            </div>
            <div class="col-6" style="font-size: 1.1rem">
                <span style="font-size: 1.1rem; font-weight: bold;">Tình trạng: </span>@Order.Status
            </div>
        </div>
        <div class="row header-row">
            <div class="col-1 row p-0">
                <div class="col-6 p-0">STT</div>
                <div class="col-6 p-0">Hình</div>
            </div>
            <div class="col-4">Tên sản phẩm</div>
            <div class="col-2">Đơn giá</div>
            <div class="col-2">Số lượng</div>
            <div class="col-3">Thành tiền</div>
        </div>
        <div class="content-rows-wrapper">
            @for (var i = 0; i < Order.Details.Count; i++)
            {
                OrderDetail detail = Order.Details[i];
                <div class="row">
                    <div class="col-1 row p-0">
                        <div class="col-6" style="padding: 8px">@((page-1)*itemsPerPage+i+1)</div>
                        <div class="col-6 p-0"><img style="height: 40px; aspect-ratio: 1/1; display: block;" src="@detail.Book.ImageURL" /></div>
                    </div>
                    <div class="col-4">@detail.Book.Title</div>
                    <div class="col-2">@PriceFormatter.Format(detail.Price)</div>
                    <div class="col-2">@detail.Amount</div>
                    <div class="col-3">@PriceFormatter.Format(detail.TotalPrice)</div>
                </div>
            }
        </div>
        @if(Order.Status == "Đã xác nhận") 
        {
            <div style="margin: 32px auto; font-size: 2rem; color: rgb(70, 209, 96); width: max-content">Đã xác nhận</div>
        }
        else
        {
            <button class="confirm-button" style="margin: 32px auto;" @onclick="() => OnOrderConfirmed(Order)">Xác nhận đơn hàng</button>
        }
    </div>
</Modal>

<div class="table">
    <div class="row header-row">
        <div class="col-1 row p-0">
            <div class="col-6 p-0">STT</div>
            <div class="col-6 p-0"></div>
        </div>
        <div class="col-2" style="padding: 0 8px">Mã nhân viên</div>
        <div class="col-2" style="padding: 0 8px">Mã khách hàng</div>
        <div class="col-2" style="padding: 0 8px">Thành tiền</div>
        <div class="col-2" style="padding: 0 8px">Ngày đặt</div>
        <div class="col-2" style="padding: 0 8px">Tình trạng</div>
        <div class="col-1" style="padding: 0 8px"></div>
    </div>
    <div class="content-rows-wrapper">
        @for (var i = 0; i < Orders.Count; i++)
        {
            Order order = Orders[i];
            <div class="row">
                <div class="col-1 row p-0">
                    <div class="col-6" style="padding: 8px">@((page-1)*itemsPerPage+i+1)</div>
                    <div class="col-6"></div>
                </div>
                <div class="col-2">@(order.EmployeeId ?? "Chưa có")</div>
                <div class="col-2">@order.CustomerId</div>
                <div class="col-2">@PriceFormatter.Format(order.TotalPrice)</div>
                <div class="col-2">@order.Date.ToShortDateString()</div>
                <div class="col-2">@order.Status</div>
                <div class="col-1">
                    <i class="oi oi-eye view-icon" style="cursor: pointer;" @onclick=@(() => OnViewOrder(order))></i>
                </div>
            </div>
        }
    </div>
    @if (maxPage > 1)
    {
        <div class="page-navigate-buttons">
            @if (page > 1)
            {
                <button class="page-navigate-button" @onclick="() => LoadPage(page - 1)"><img aria-hidden="true" src="/left_orange.png" /></button>
            }
            @if (page - pageWindow > 1)
            {
                <button @onclick="() => LoadPage(1)" class="page-navigate-button">1</button>
            }
            @if (page - pageWindow > 2)
            {
                <div style="height: 40px; display: grid; place-items: center;">...</div>
            }
            @for (var i = -pageWindow; i <= pageWindow; i++)
            {
                int p = page + i;
                if (1 <= p && p <= maxPage)
                {
                    if (p == page)
                    {
                        <button class="page-navigate-button selected">@p</button>
                    }
                    else
                    {
                        <button @onclick="() => LoadPage(p)" class="page-navigate-button">@p</button>
                    }
                }
            }

            @if (maxPage - page > pageWindow)
            {
                <div style="height: 40px; display: grid; place-items: center;">...</div>
            }
            @if (page + pageWindow < maxPage)
            {
                <button @onclick="() => LoadPage(maxPage)" class="page-navigate-button">@maxPage</button>
            }
            @if (page < maxPage)
            {
                <button class="page-navigate-button" @onclick= "() => LoadPage(page + 1)"><img aria-hidden="true" src="/right_orange.png" /></button>
            }
        </div>
    }
</div>

@code {
    public bool IsOpen { get; set; } = false;
    public List<Order> Orders { get; set; } = new();
    public Order Order { get; set; } = new();
    public int pageWindow = 1;
    public int page = 1;
    public int maxPage = 10;
    public int itemsPerPage;

    protected override async Task OnParametersSetAsync()
    {
        await LoadPage(1);
    }

    public void OnViewOrder(Order order)
    {
        IsOpen = true;
        Order = order;
    }

    public async void OnOrderConfirmed(Order order)
    {
        Order order1 = await OrderService.ConfirmOrder(order.OrderId);
        IsOpen = false;
        Order = new();
        var index = Orders.FindIndex(o => o.OrderId == order1.OrderId);
        Orders[index] = order1;
        StateHasChanged();
    }

    public async Task LoadPage(int page)
    {
        this.page = page;
        var response = await OrderService.GetOrdersPagination(page);
        itemsPerPage = response.ItemsPerPage;
        maxPage = response.Pages;
        Orders = response.Items;
        StateHasChanged();

    }
}
